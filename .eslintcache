[{"C:\\Users\\YFC\\OneDrive\\Documents\\DevProjects\\React Course\\MusicPlayer\\my-music-player\\src\\index.js":"1","C:\\Users\\YFC\\OneDrive\\Documents\\DevProjects\\React Course\\MusicPlayer\\my-music-player\\src\\App.js":"2","C:\\Users\\YFC\\OneDrive\\Documents\\DevProjects\\React Course\\MusicPlayer\\my-music-player\\src\\reportWebVitals.js":"3","C:\\Users\\YFC\\OneDrive\\Documents\\DevProjects\\React Course\\MusicPlayer\\my-music-player\\src\\components\\Song.js":"4","C:\\Users\\YFC\\OneDrive\\Documents\\DevProjects\\React Course\\MusicPlayer\\my-music-player\\src\\components\\Player.js":"5","C:\\Users\\YFC\\OneDrive\\Documents\\DevProjects\\React Course\\MusicPlayer\\my-music-player\\src\\util.js":"6","C:\\Users\\YFC\\OneDrive\\Documents\\DevProjects\\React Course\\MusicPlayer\\my-music-player\\src\\components\\Library.js":"7","C:\\Users\\YFC\\OneDrive\\Documents\\DevProjects\\React Course\\MusicPlayer\\my-music-player\\src\\components\\LibrarySong.js":"8"},{"size":478,"mtime":1612372350500,"results":"9","hashOfConfig":"10"},{"size":1482,"mtime":1614185834593,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":301,"mtime":1613097418117,"results":"13","hashOfConfig":"10"},{"size":1713,"mtime":1614183852927,"results":"14","hashOfConfig":"10"},{"size":2899,"mtime":1612890537112,"results":"15","hashOfConfig":"10"},{"size":656,"mtime":1614185859270,"results":"16","hashOfConfig":"10"},{"size":1208,"mtime":1614185930460,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1jbnwbh",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\YFC\\OneDrive\\Documents\\DevProjects\\React Course\\MusicPlayer\\my-music-player\\src\\index.js",[],["37","38"],"C:\\Users\\YFC\\OneDrive\\Documents\\DevProjects\\React Course\\MusicPlayer\\my-music-player\\src\\App.js",["39"],"import React, { useState, useRef } from \"react\";\nimport \"./styles/app.scss\";\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport Library from \"./components/Library\";\n//Imprt Util\nimport data from \"./util\";\nimport LibrarySong from \"./components/LibrarySong\";\n\nfunction App() {\n  //ref\n  const audioRef = useRef(null);\n  //Use State here\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n  });\n\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    setSongInfo({ ...songInfo, currentTime: current, duration });\n  };\n  return (\n    <div className=\"App\">\n      <Song currentSong={currentSong} />\n      <Player\n        songInfo={songInfo}\n        setSongInfo={setSongInfo}\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        currentSong={currentSong}\n      />\n      <Library\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        setSongs={setSongs}\n      />\n\n      <audio\n        onTimeUpdate={timeUpdateHandler}\n        onLoadedMetadata={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\YFC\\OneDrive\\Documents\\DevProjects\\React Course\\MusicPlayer\\my-music-player\\src\\reportWebVitals.js",[],"C:\\Users\\YFC\\OneDrive\\Documents\\DevProjects\\React Course\\MusicPlayer\\my-music-player\\src\\components\\Song.js",[],"C:\\Users\\YFC\\OneDrive\\Documents\\DevProjects\\React Course\\MusicPlayer\\my-music-player\\src\\components\\Player.js",["40"],"import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlay,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faPause,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Player = ({\r\n  currentSong,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  audioRef,\r\n  setSongInfo,\r\n  songInfo,\r\n}) => {\r\n  //eventHandlers\r\n  const playSongHandler = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  };\r\n\r\n  const getTime = (time) => {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  };\r\n\r\n  const dragHandler = (e) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"time-control\">\r\n        <p>{getTime(songInfo.currentTime)}</p>\r\n        <input\r\n          min={0}\r\n          max={songInfo.duration}\r\n          value={songInfo.currentTime}\r\n          type=\"range\"\r\n          onChange={dragHandler}\r\n        />\r\n        <p>{getTime(songInfo.duration)}</p>\r\n      </div>\r\n      <div className=\"play-control\">\r\n        <FontAwesomeIcon className=\"skip-back\" size=\"2x\" icon={faAngleLeft} />\r\n        <FontAwesomeIcon\r\n          onClick={playSongHandler}\r\n          className=\"play\"\r\n          size=\"2x\"\r\n          icon={isPlaying ? faPause : faPlay}\r\n        />\r\n        <FontAwesomeIcon\r\n          className=\"skip-forward\"\r\n          size=\"2x\"\r\n          icon={faAngleRight}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","C:\\Users\\YFC\\OneDrive\\Documents\\DevProjects\\React Course\\MusicPlayer\\my-music-player\\src\\util.js",[],"C:\\Users\\YFC\\OneDrive\\Documents\\DevProjects\\React Course\\MusicPlayer\\my-music-player\\src\\components\\Library.js",[],"C:\\Users\\YFC\\OneDrive\\Documents\\DevProjects\\React Course\\MusicPlayer\\my-music-player\\src\\components\\LibrarySong.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":8,"column":8,"nodeType":"47","messageId":"48","endLine":8,"endColumn":19},{"ruleId":"45","severity":1,"message":"49","line":1,"column":17,"nodeType":"47","messageId":"48","endLine":1,"endColumn":25},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'LibrarySong' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]